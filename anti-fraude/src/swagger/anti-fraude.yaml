openapi: 3.0.3
info:
  title: ANTI-FRAUDE API
  description: |-
    API do microsserviço de Anti-fraude
  version: 0.0.1
servers:
  - url: http://localhost:3000
paths:
  /api/admin/accounts:
    get:
      security: 
      - auth: []
      tags:
        - "accounts"
      summary: List accounts
      description: List all accounts
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
    post:
      tags:
        - "accounts"
      summary: Add account
      description: Add new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "401":
          description: unauthorized
  /api/admin/accounts/{id}:
    get:
      security: 
      - auth: []
      tags:
        - "accounts"
      summary: Find account
      description: Find one specific account
      parameters:
        - name: id
          in: path
          description: ID of account that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: invalid ID supplied
        "404":
          description: not found
    put:
      security: 
      - auth: []
      tags:
        - "accounts"
      summary: Update account
      description: Update account by entering the whole updated account
      parameters:
        - name: id
          in: path
          description: ID of account that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: invalid ID supplied
        "401":
          description: unauthorized
    delete:
      security: 
      - auth: []
      tags:
        - "accounts"
      summary: Delete account
      description: Delete account by entering its ID
      parameters:
        - name: id
          in: path
          description: ID of account that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "400":
          description: invalid ID supplied
  
  /api/accounts/login:
    post:
      tags:
        - "accounts"
      summary: Login account
      description: new account login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountLogin"
      responses:
        "201":
          description: login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "401":
          description: unauthorized





# ANTIFRAUDES
  /api/admin/antifraude:
    get:
      security: 
      - auth: []
      tags:
        - "anti-fraude"
      summary: Lista analise de AntiFraude
      description: Lista todas analise de AntiFraude
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AntiFraudeListar"
        "401":
          description: unauthorized
        "404":
          description: not found
        "500":
          description: internal server error
    post:
      tags:
        - "anti-fraude"
      summary: adicionar analise
      description: adicionar uma nova analise de AntiFraude
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AntiFraudeCriar"
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                example: {idAnaliseAntiFraude: a000000000000000}
        "500":
          description: internal server error

  /api/admin/antifraude/{id}:
    get:
      security: 
      - auth: []
      tags:
        - "anti-fraude"
      summary: detalhar uma analise AntiFraude
      description: detalhar uma analise AntiFraude pelo id
      parameters:
        - name: id
          in: path
          description: ID da analise AntiFraude
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AntiFraudeDetalharPorId"
        "400":
          description: bad request     
        "401":
          description: unauthorized
        "404":
          description: not found
        "500":
          description: internal server error
    put:
      security: 
      - auth: []
      tags:
        - "anti-fraude"
      summary: atualizar um statusAnalise 
      description:  " status permitidos: 'Aprovada', 'Em análise', 'Reprovada'"
      parameters:
        - name: id
          in: path
          description: ID da analise AntiFraude
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AntiFraudeAlterarStatus"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AntiFraudeDetalharPorId"
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: not found
        "500":
          description: internal server error

components:
  schemas:
    Account:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
       
    AccountLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
       
    AntiFraudeListar:
      type: array
      items:
        type: object
        properties:
          id:
           type: string
          idCliente:
            type: string
          idTransacao:
            type: string
          statusAnalise:
            type: string
            enum:
            - Aprovada
            - Em análise 
            - Reprovada 
          dataCriacao: 
            type: string
            format: date-time
          ultimaModificacao: 
            type: string
            format: date-time

    AntiFraudeCriar:
      type: object
      properties:
        idCliente:
          type: string
        idTransacao:
          type: string
        valorTranferencia:
          type: number

    AntiFraudeAlterarStatus:
      type: object
      properties:
        statusAnalise:
            type: string
            enum:
            - Aprovada
            - Em análise 
            - Reprovada 

    AntiFraudeDetalharPorId:
        type: object
        properties:
          d:
            type: string
          statusAnalise:
            type: string
            enum:
            - 'em analise'
            - 'aprovada'
          idCliente:
            type: string
          informacoesCliente:
            type: object
            properties:
              nome:
                type: string
              cpf:
                type: string
              email:
                type: string
              telefone:
                type: string
              rendaMensal:
                type: number
              vencimentoFatura:
                type: number
                format: date
          enderecoCliente:
            type: object
            properties:
              ruaDoEndereco:
                type: string
              numeroDoEndereco:
                type: string
              complementoDoEndereco:
                type: string
              cepEndereco:
                type: string
              cidadeEndereco:
                type: string
              estadoEndereco:
                type: string
          vencimentoFatura:
            type: number
          idTransacao:
            type: string
          valorTranferencia:
            type: number        
          dataCriacao: 
            type: string
            format: date-time
          ultimaModificacao: 
            type: string
            format: date-time


  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
      
      