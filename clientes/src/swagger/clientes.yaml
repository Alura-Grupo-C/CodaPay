openapi: 3.0.3
info:
  title: Clientes API
  description: |-
    API do microsserviço de Clientes
  version: 0.0.1
paths:
  /api/admin/clientes/{id}:
    get:
      tags:
        - Clientes
      summary: Listar os clientes
      description: Listar todos os clientes
      parameters:
        - name: id
          in: path
          description: ID do cliente
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              examples:
                Cliente:
                  value:
                    dadosPessoais:
                      nome: string
                      cpf: string
                      email: string
                      telefone: string
                      rendaMensal: number
                    endereco:
                      ruaDoEndereco: string
                      numeroDoEndereco: string
                      complementoDoEndereco: string
                      cepEndereco: string
                      cidadeEndereco: string
                      estadoEndereco: string
                    vencimentoFatura: string
        '404':
          description: não encontrado
  /api/admin/validar:
    post:
      tags:
        - Clientes
      summary: validar dados
      description: endpoint para validar dados de cartão
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Validar"
            examples:
              values:
                numeroCartao: "9635587896532"
                nomeCartao: Jorge Lopez
                validadeCartao: 04/2028
                cvcCartao: "752"
      responses:
        '200':
          description: valido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validar"
              examples:
                dados:
                  values:
                    numeroCartao: "9635587896532"
                    nomeCartao: Jorge Lopez
                    validadeCartao: 04/2028
                    cvcCartao: "752"
        '404':
          description: numero de cartão não encontrado
  /api/admin/accounts:
    get:
      tags:
        - Accounts
      summary: List accounts
      description: List all accounts
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
    post:
      tags:
        - Accounts
      summary: Add account
      description: Add new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Account"
        '401':
          description: unauthorized
  /api/admin/accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Find account
      description: Find one specific account
      parameters:
        - name: id
          in: path
          description: ID of account that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Account"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
    put:
      tags:
        - Accounts
      summary: Update account
      description: Update account by entering the whole updated account
      parameters:
      - name: id
        in: path
        description: ID of account that needs to be updated
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/Account"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Account"
        '400':
          description: invalid ID supplied
        '401':
          description: unauthorized
    delete:
      tags:
        - Accounts
      summary: Delete account
      description: Delete account by entering its ID
      parameters:
      - name: id
        in: path
        description: ID of account that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        '204':
          description: no content
        '401':
          description: unauthorized
        '400':
          description: invalid ID supplied
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
    Cliente:
      type: object
      properties:
        id:
          type: string
        dadosPessoais:
          type: object
          properties:
            nome:
              type: string
            cpf:
              type: string
            email:
              type: string
              format: email
            telefone:
              type: string
            rendaMensal:
              type: number
        endereco:
          type: object
          properties:
            ruaDoEndereco:
              type: string
            numeroDoEndereco:
              type: string
            complementoDoEndereco:
              type: string
            cepEndereco:
              type: string
            cidadeEndereco:
              type: string
            estadoEndereco:
              type: string
        dadosCartao:
          type: object
          properties:
            numeroCartao:
              type: string
            nomeCartao:
              type: string
            validadeCartao:
              type: string
            cvcCartao:
              type: string
            diaVencimentoFatura:
              type: string
    Validar:
      type: object
      properties:
        numeroCartao:
          type: string
        nomeCartao:
          type: string
        validadeCartao:
          type: string
        cvcCartao:
          type: string       